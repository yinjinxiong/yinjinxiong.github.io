<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>windows 搭建博客hexo + github</title>
      <link href="/2018/05/05/windows-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2hexo-github/"/>
      <url>/2018/05/05/windows-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2hexo-github/</url>
      <content type="html"><![CDATA[<p>本文主要介绍在Windows环境下结合github page 搭建hexo 博客，包括自定义域名，创建七牛图床，个性化设置等。下图是总体的一个概述：<br><img src="http://p82xdlzne.bkt.clouddn.com/blog_20180505123621.png" alt="hexo博客搭建概述"><br>下面将会一一详细说明        </p><h1 id="搭建本地博客的准备工作"><a href="#搭建本地博客的准备工作" class="headerlink" title="搭建本地博客的准备工作"></a>搭建本地博客的准备工作</h1><p><img src="http://p82xdlzne.bkt.clouddn.com/%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C.png" alt="博客准备工作">            </p><ul><li>安装git<br>下载<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">地址</a>，如果没有特殊要求，只要一直next即可，建议自定义安装的路径。<br>查看git是否安装：        <pre><code>git --version        </code></pre><strong>注意，下面涉及到的命令应该都在 git bash 中执行（git安装后，鼠标右键即可看到git bash</strong>         </li></ul><ul><li><p>安装node.js<br>打开<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">网址</a>，选择你Windows系统对应的安装包，我的是64位，所以选择64位的安装包，点击即可下载：<br><img src="http://p82xdlzne.bkt.clouddn.com/node%E4%B8%8B%E8%BD%BD.png" alt="node下载图"><br>如果没有特殊要求，只要一直next即可，建议自定义安装的路径。<br>验证node是否安装成功        </p><pre><code>node -v         </code></pre><p>安装成功后会输出版本号            </p></li><li><p>安装hexo<br>执行以下命令安装hexo的客户端:        </p><pre><code>npm install  hexo-cli -g        </code></pre><p>验证方式：        </p><pre><code>hexo -v         </code></pre><p>验证npm是否安装：        </p><pre><code>npm -v </code></pre></li></ul><h1 id="本地博客的使用"><a href="#本地博客的使用" class="headerlink" title="本地博客的使用"></a>本地博客的使用</h1><p><img src="http://p82xdlzne.bkt.clouddn.com/%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2%E4%BD%BF%E7%94%A8.png" alt="博客使用">        </p><ul><li>初始化博客，创建博客目录blog以及对目录进行初始化:        <pre><code>hexo init blog        </code></pre></li><li>清空静态页面        <pre><code>hexo clean        </code></pre></li><li>创建post文章:        <pre><code>hexo n &quot;title&quot; == hexo new &quot;title&quot;        </code></pre></li><li>生成静态页面:        <pre><code>hexo g == hexo generate        </code></pre></li><li>部署静态页面到线上，比如github        <pre><code>hexo d == hexo deploy        </code></pre></li><li>本地启动hexo服务器<br><code>`</code><br>hexo s == hexo server #这个方式启动，hexo会自动监听文件变动并自动更新，无需重启服务器<br>hexo server -s #静态模式<br>hexo -p 5000 #更改端口<br>hexo -i 192.168.21.137 #更改IP        </li></ul><pre><code>在浏览器中输入网址进行验证:        </code></pre><p><a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><pre><code># 关联github page        ![博客关联githubPage](http://p82xdlzne.bkt.clouddn.com/%E5%85%B3%E8%81%94githubPage.png)        - 注册github账号，注册[地址](https://github.com/)        - 创建仓库，仓库名称为username.github.io，username 就是github的用户名        - 本地电脑生成ssh密钥对，并把公钥放到github上保存，方便推送博客到github上面            鼠标点击右键，选择git bash，设置user.name 和user.email 的配置信息：                </code></pre><p>git config –global user.name “你的github用户名”<br>git config –global user.email “你的github注册邮箱”                        </p><pre><code>生成ssh秘钥文件        </code></pre><p>ssh-keygen -t rsa -C “你的github注册邮箱”</p><pre><code>**然后直接按三个回车，默认不需要密码**        然后找到生成的.ssh文件夹中的id_rsa.pub公钥，将其所有内容复制，但不包括回车        在浏览器中打开github[设置ssh的网址](https://github.com/settings/keys)，创建 new ssh key，如下图：        ![创建github ssh](http://p82xdlzne.bkt.clouddn.com/%E9%85%8D%E7%BD%AEgithubssh.jpg)        在git bash中输入以下命令对公钥配置是否正确进行验证：        </code></pre><p>ssh <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></p><pre><code>输出结果：        ![验证公钥是否正确配置](http://p82xdlzne.bkt.clouddn.com/%E9%85%8D%E7%BD%AEgithubssh.jpg)        配置ssh秘钥的原因是为了每次推送的时候不用手动输入账号和密码。        - 在站点配置文件(在blog目录下面的_config.yml文件称为**站点配置文件**，在blog/themes/{theme_name}/_config.yml配置文件称为**主题配置文件**)中配置github的信息        找到  Deployment ，然后做以下的配置：        ![hexo配置github仓库的信息](http://p82xdlzne.bkt.clouddn.com/%E9%83%A8%E7%BD%B2git%E7%9A%84%E4%BF%A1%E6%81%AF.jpg)                - 安装部署插件        </code></pre><p>npm install hexo-deploy-git –save        </p><pre><code>- 使用github的域名访问你的博客        </code></pre><p><a href="http://username.github.io" target="_blank" rel="noopener">http://username.github.io</a>         </p><pre><code># 绑定个性化域名        演示通过阿里云万网绑定域名        - 找到阿里云控制台的域名管理            ![域名解析](http://p82xdlzne.bkt.clouddn.com/%E9%98%BF%E9%87%8C%E4%BA%91%E5%9F%9F%E5%90%8D.jpg)        - 增加解析记录：        ![解析记录](http://p82xdlzne.bkt.clouddn.com/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90.jpg)            关于github的ip，你可以在本地电脑的命令行ping你的github域名获取ip：        </code></pre><p>ping xxxx.github.io # xxxx就是你的github用户名        </p><pre><code>- 登录github，进入存放博客的仓库，点击setting，设置custom domain，输入你的域名：        ![仓库的setting](http://p82xdlzne.bkt.clouddn.com/%E4%BB%93%E5%BA%93%E7%9A%84setting.jpg)        ![设置个性域名](http://p82xdlzne.bkt.clouddn.com/githubPage%E5%9F%9F%E5%90%8D.png)点击保存        - 在本地博客的blog\source目录增加CNAME文件，打开电脑记事本，在文件里面填写你的个性化域名，**域名需要带上www，例如：www.abc.com**,**注意：保存文件类型是所有文件，不是txt**        ![CNAME](http://p82xdlzne.bkt.clouddn.com/CNAME.png)        - 完成以上操作，就可执行以下命令：        </code></pre><p>hexo clean<br>hexo g<br>hexo d<br><code>`</code><br>这个时候用浏览器打开你的域名即可访问你的博客        </p><p>下一篇文章将会讲解通过七牛云设置图床</p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> github page </tag>
            
            <tag> windows </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo的常用命令</title>
      <link href="/2018/05/01/hexo%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2018/05/01/hexo%E7%9A%84%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<p>主要是记录使用hexo写博客的常用命令        </p><h1 id="生成post文件"><a href="#生成post文件" class="headerlink" title="生成post文件"></a>生成post文件</h1><pre><code>hexo n 文章标题            eg：        hexo n index        </code></pre><h1 id="生成html文件"><a href="#生成html文件" class="headerlink" title="生成html文件"></a>生成html文件</h1><pre><code>hexo g         </code></pre><h1 id="发布到远程站点，比如GitHub"><a href="#发布到远程站点，比如GitHub" class="headerlink" title="发布到远程站点，比如GitHub"></a>发布到远程站点，比如GitHub</h1><pre><code>hexo d        </code></pre><h1 id="启动本地的服务"><a href="#启动本地的服务" class="headerlink" title="启动本地的服务"></a>启动本地的服务</h1><pre><code>hexo s         </code></pre>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> hexo常用命令 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/05/01/hello-world/"/>
      <url>/2018/05/01/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><table><thead><tr><th>A0</th><th>B0</th><th>C0</th><th>D0</th><th>E0</th><th>F0</th></tr></thead><tbody><tr><td>A1</td><td>B1</td><td>C1</td><td>D1</td><td>E1</td><td>F1</td></tr></tbody></table>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> java </tag>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
